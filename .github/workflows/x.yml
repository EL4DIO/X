name: Boost Activity and Earn Achievements

on:
  schedule:
    - cron: '*/10 * * * *'  # Runs every 30 minutes
  workflow_dispatch:  # Allows manual trigger for testing

jobs:
  activity_boost:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Git
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@users.noreply.github.com"

      # Create random branches and commit files to simulate activity
      - name: Create random branches and push files
        run: |
          # Generate timestamp for uniqueness
          TIMESTAMP=$(date +%Y-%m-%d_%H-%M-%S)
          BRANCH_NAME="feature/update-docs-$TIMESTAMP"
          mkdir -p "docs/updates/$TIMESTAMP"
          
          # Create and push files to simulate work
          echo "This is an update for $TIMESTAMP" > "docs/updates/$TIMESTAMP/README.md"
          echo "Documentation update at $TIMESTAMP" > "docs/updates/$TIMESTAMP/CHANGELOG.md"
          git add .
          git commit -m "Update docs at $TIMESTAMP"
          git push origin main

          # Create a new branch and push to it
          git checkout -b "$BRANCH_NAME"
          git add .
          git commit -m "Automated docs update on branch $BRANCH_NAME"
          git push --set-upstream origin "$BRANCH_NAME"

      # Create a pull request to simulate collaboration and earn the Pull Shark achievement
      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v4
        with:
          title: "Automated PR for Docs Update"
          body: "This PR contains automated changes to documentation files."
          base: main  # Change to any target branch
          head: ${{ github.ref }}
          commit-message: "Automated PR commit for docs update"
          
      # Merge Pull Requests to increase activity
      - name: Merge Pull Request
        uses: peter-evans/merge-pull-request@v3  # Updated to use version v3
        with:
          pull-request-number: ${{ steps.create-pull-request.outputs.pull-request-number }}
          merge-method: merge  # Options: merge, squash, rebase
          commit-message: "Merge automated PR"

      # Trigger the First Issue achievement by creating an issue
      - name: Create an Issue
        run: |
          curl -u "github-actions:${{ secrets.GITHUB_TOKEN }}" \
          -X POST -H "Accept: application/vnd.github.v3+json" \
          -d '{"title":"Automated Issue","body":"This is an issue created by a GitHub action."}' \
          https://api.github.com/repos/${{ github.repository }}/issues

      # Trigger the First Commit achievement by making a new commit
      - name: Make a First Commit
        run: |
          TIMESTAMP=$(date +%Y-%m-%d_%H-%M-%S)
          echo "First commit example $TIMESTAMP" > "new_file_$TIMESTAMP.txt"
          git add "new_file_$TIMESTAMP.txt"
          git commit -m "First commit example $TIMESTAMP"
          git push origin main

      # Create multiple new files rapidly to earn the Quickdraw achievement
      - name: Push New Files for Quickdraw
        run: |
          for i in {1..5}; do
            TIMESTAMP=$(date +%Y-%m-%d_%H-%M-%S)
            echo "Quickdraw file created at $TIMESTAMP" > "quickdraw/quickdraw_$TIMESTAMP.txt"
            git add "quickdraw/quickdraw_$TIMESTAMP.txt"
            git commit -m "Quickdraw commit $TIMESTAMP"
            git push origin main
          done

      # Forking a repository to earn Fork Shark achievement
      - name: Fork Repository
        run: |
          curl -u "github-actions:${{ secrets.GITHUB_TOKEN }}" \
          -X POST https://api.github.com/repos/${{ github.repository }}/forks

      # Code Review: Add a fake review to simulate activity
      - name: Simulate Code Review
        run: |
          curl -u "github-actions:${{ secrets.GITHUB_TOKEN }}" \
          -X POST -H "Accept: application/vnd.github.v3+json" \
          -d '{"event":"COMMENT","body":"Looks good to me!","commit_id":"$GITHUB_SHA"}' \
          https://api.github.com/repos/${{ github.repository }}/pulls/${{ steps.create-pull-request.outputs.pull-request-number }}/reviews
          
      # Simulate Contributing to Arctic Code Vault by archiving repo
      - name: Archive Repository (Simulating Arctic Code Vault Contribution)
        run: |
          curl -u "github-actions:${{ secrets.GITHUB_TOKEN }}" \
          -X PATCH -H "Accept: application/vnd.github.v3+json" \
          -d '{"archived":true}' \
          https://api.github.com/repos/${{ github.repository }}

      # Creating an additional commit to simulate activity for Repository Contributor achievement
      - name: Extra Commit for Repo Contributor
        run: |
          TIMESTAMP=$(date +%Y-%m-%d_%H-%M-%S)
          echo "Extra commit to contribute for repo contributor achievement" > "activity/$TIMESTAMP.txt"
          git add "activity/$TIMESTAMP.txt"
          git commit -m "Contribute to repo with an extra commit"
          git push origin main
